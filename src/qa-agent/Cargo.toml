[package]
name = "qa-agent"
version = "0.1.0"
edition = "2021"
description = "AI-CORE Quality Assurance Agent - Comprehensive testing, performance validation, and quality metrics"
license = "MIT"
authors = ["AI-CORE Team"]

[lib]
name = "qa_agent"
path = "src/lib.rs"

[[bin]]
name = "qa-orchestrator"
path = "src/bin/qa_orchestrator.rs"

[[bin]]
name = "performance-tester"
path = "src/bin/performance_tester.rs"

[[bin]]
name = "security-scanner"
path = "src/bin/security_scanner.rs"

[[bin]]
name = "quality-dashboard"
path = "src/bin/quality_dashboard.rs"

[dependencies]
# Core async runtime
tokio = { version = "1.40", features = ["full"] }
tokio-util = "0.7"

# Web framework for dashboard and APIs
axum = { version = "0.7", features = ["ws", "multipart"] }
tower = { version = "0.4", features = ["full"] }
tower-http = { version = "0.5", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"

# Configuration and environment
config = "0.14"
clap = { workspace = true }
dotenvy = "0.15"

# Database clients (for testing integration)
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "chrono", "uuid"] }
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"] }
mongodb = "2.8"

# HTTP client for API testing
reqwest = { version = "0.12", features = ["json", "stream", "multipart"] }
hyper = { version = "1.0", features = ["full"] }

# Testing frameworks
criterion = { version = "0.5", features = ["html_reports"], optional = true }
proptest = "1.4"
mockall = { version = "0.12", optional = true }
wiremock = { version = "0.6", optional = true }

# Performance monitoring and metrics
prometheus = "0.13"
metrics = "0.22"
metrics-exporter-prometheus = "0.13"

# Security testing
security-framework = { version = "2.11", optional = true }
rustls = "0.23"
webpki-roots = "0.26"

# Tracing and observability
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "chrono"] }
tracing-opentelemetry = "0.22"
opentelemetry = { version = "0.21", features = ["trace"] }
opentelemetry-prometheus = "0.13"
opentelemetry-jaeger = "0.20"

# Utilities
uuid = { version = "1.10", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
anyhow = "1.0"
thiserror = "1.0"
url = "2.5"
once_cell = "1.19"
futures = "0.3"
async-trait = "0.1"

# File system and process management
walkdir = "2.5"
notify = "6.1"
which = "6.0"

# Report generation
handlebars = "6.0"
comrak = "0.24"
plotters = "0.3"

# Additional dependencies for testing and utilities
glob = "0.3"
hostname = "0.3"
num_cpus = "1.16"
fastrand = "2.0"

# Workspace dependencies
AI-PLATFORM-shared = { path = "../shared" }
AI-PLATFORM-database = { path = "../database", features = ["postgres", "redis", "mongodb", "clickhouse"], optional = true }
AI-PLATFORM-security = { path = "../security", optional = true }

[dev-dependencies]
tempfile = "3.12"
test-log = "0.2"
env_logger = "0.11"
serial_test = "3.1"

[features]
default = ["database-integration", "security-integration"]
database-integration = ["dep:AI-PLATFORM-database"]
security-integration = ["dep:AI-PLATFORM-security"]
performance-testing = ["criterion"]
security-testing = ["security-framework"]
integration-testing = ["wiremock", "mockall"]
full-testing = ["performance-testing", "security-testing", "integration-testing"]

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.test]
opt-level = 1
debug = true

[profile.bench]
opt-level = 3
debug = false
lto = true
