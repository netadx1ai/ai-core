[package]
name = "AI-PLATFORM-database"
version = "0.1.0"
edition = "2021"
description = "Hybrid database layer for AI-CORE intelligent automation platform"
authors = ["AI-CORE Team"]
license = "MIT"

[dependencies]
# Async runtime
tokio = { version = "1.35", features = ["full"] }
tokio-util = { version = "0.7", features = ["codec"] }

# Error handling and utilities
anyhow = "1.0"
thiserror = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
uuid = { version = "1.6", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
url = { version = "2.5", features = ["serde"] }

# Async traits
async-trait = "0.1"
futures = "0.3"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# PostgreSQL
sqlx = { version = "0.7", features = [
    "runtime-tokio-rustls",
    "postgres",
    "uuid",
    "chrono",
    "json",
    "migrate"
], optional = true }

# MongoDB
mongodb = { version = "2.8", features = ["tokio-runtime"], optional = true }
bson = { version = "2.9", features = ["chrono-0_4"], optional = true }

# ClickHouse
clickhouse = { version = "0.12", features = ["lz4", "inserter"], optional = true }

# Redis
redis = { version = "0.24", features = [
    "tokio-comp",
    "connection-manager",
    "streams",
    "json"
], optional = true }

# Password hashing
bcrypt = "0.15"
argon2 = { version = "0.5", optional = true }

# Test data generation and seeding
fake = { version = "2.9", features = ["derive", "chrono", "uuid"], optional = true }
rand = { version = "0.8", optional = true }
sha2 = { version = "0.10", optional = true }
hex = { version = "0.4", optional = true }
clap = { version = "4.4", features = ["derive"], optional = true }
serde_yaml = { version = "0.9", optional = true }
rust_decimal = { version = "1.33", features = ["serde"], optional = true }

# Metrics and monitoring
prometheus = { version = "0.13", features = ["process"], optional = true }
metrics = { version = "0.21", optional = true }
metrics-exporter-prometheus = { version = "0.12", optional = true }

# Connection pooling and health checks
deadpool = "0.10"
deadpool-postgres = { version = "0.12", optional = true }
deadpool-redis = { version = "0.14", optional = true }

# Data validation
validator = { version = "0.16", features = ["derive"] }
regex = "1.10"

# Serialization formats
bincode = "1.3"
postcard = "1.0"

# Compression
lz4_flex = { version = "0.11", optional = true }
zstd = { version = "0.13", optional = true }

# Configuration
config = "0.14"
dotenvy = "0.15"

# Testing dependencies (optional)
testcontainers = { version = "0.15", optional = true }
mockall = { version = "0.12", optional = true }

# Development dependencies
[dev-dependencies]
tokio-test = "0.4"
mockall = "0.12"
testcontainers = "0.15"
pretty_assertions = "1.4"
tempfile = "3.8"
criterion = { version = "0.5", features = ["html_reports"] }

# Benchmarks
[[bench]]
name = "database_benchmarks"
harness = false

# Features
[features]
default = ["postgres", "migrations", "health-checks"]

# Individual database support
postgres = ["dep:sqlx", "dep:deadpool-postgres"]
mongodb = ["dep:mongodb", "dep:bson"]
clickhouse = ["dep:clickhouse"]
redis = ["dep:redis", "dep:deadpool-redis"]

# Optional features
migrations = []
health-checks = []
metrics = ["dep:prometheus", "dep:metrics", "dep:metrics-exporter-prometheus"]
encryption = ["dep:argon2"]
compression = ["dep:lz4_flex", "dep:zstd"]
testing = ["dep:testcontainers", "dep:mockall"]
seeding = [
    "dep:fake",
    "dep:rand",
    "dep:sha2",
    "dep:hex",
    "dep:clap",
    "dep:serde_yaml",
    "dep:rust_decimal"
]
