[package]
name = "AI-PLATFORM-security"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
keywords.workspace = true
categories.workspace = true
description = "Security framework for AI-CORE Intelligent Automation Platform"

[dependencies]
# Shared types and utilities
AI-PLATFORM-shared = { path = "../shared" }

# Async runtime
tokio = { workspace = true }
tokio-util = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }

# Web framework for middleware
axum = { workspace = true, optional = true }
tower = { workspace = true, optional = true }
tower-http = { workspace = true, optional = true }
hyper = { workspace = true, optional = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
serde_yaml = "0.9"

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Time and identifiers
chrono = { workspace = true }
uuid = { workspace = true }

# Validation
validator = { workspace = true }
regex = { workspace = true }

# Authentication & Cryptography
jsonwebtoken = { workspace = true, optional = true }
argon2 = { workspace = true, optional = true }
bcrypt = { workspace = true, optional = true }
aes-gcm = { version = "0.10", optional = true }
chacha20poly1305 = { version = "0.10", optional = true }
ed25519-dalek = { version = "2.0", optional = true }
rand = "0.8"
ring = { version = "0.17", optional = true }
sha2 = "0.10"
hmac = "0.12"
base64 = "0.21"

# Key derivation and secure storage
pbkdf2 = { version = "0.12", optional = true }
scrypt = { version = "0.11", optional = true }
zeroize = { version = "1.7", features = ["zeroize_derive"] }

# Database drivers for auth storage
sqlx = { workspace = true }
redis = { workspace = true, optional = true }

# Rate limiting
governor = { workspace = true, optional = true }
tower_governor = { version = "0.2", optional = true }

# Configuration
config = { workspace = true }
clap = { workspace = true }
dotenvy = { workspace = true }

# Logging & Tracing
tracing = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, optional = true }

# HTTP Client for external auth
reqwest = { workspace = true, optional = true }

# Input sanitization and validation
html-escape = "0.2"
urlencoding = "2.1"
once_cell = "1.19"

# Time-based one-time passwords (TOTP)
totp-rs = { version = "5.4", optional = true }
qrcode = { version = "0.14", optional = true }

# CSRF protection
csrf = { version = "0.4", optional = true }

# Security headers
headers = { version = "0.3", optional = true }

# IP address handling
ipnet = { version = "2.9", optional = true }
maxminddb = { version = "0.24", optional = true }

# JWT blacklisting and session management
dashmap = "5.5"

# Metrics for security monitoring
prometheus = { workspace = true, optional = true }
metrics = { workspace = true, optional = true }

# System utilities
num_cpus = { workspace = true }
bytes = { workspace = true }

# Development and testing utilities (optional)
fake = { version = "2.9", optional = true }
quickcheck = { version = "1.0", optional = true }
quickcheck_macros = { version = "1.0", optional = true }
testcontainers = { workspace = true, optional = true }
wiremock = { workspace = true, optional = true }

[dev-dependencies]
# Testing framework
tokio-test = { workspace = true }
mockall = { workspace = true }
criterion = { workspace = true }
pretty_assertions = { workspace = true }
tempfile = { workspace = true }

# Additional testing utilities
rstest = "0.18"

[features]
default = ["jwt", "rbac", "encryption", "middleware", "rate-limiting", "audit-logging"]

# Authentication features
jwt = ["dep:jsonwebtoken", "dep:argon2", "dep:bcrypt"]
oauth = ["dep:reqwest"]
totp = ["dep:totp-rs", "dep:qrcode"]

# Authorization features
rbac = ["dep:redis"]
abac = ["dep:redis"]

# Encryption features
encryption = ["dep:aes-gcm", "dep:chacha20poly1305", "dep:ring", "dep:ed25519-dalek", "dep:pbkdf2", "dep:scrypt"]
key-rotation = ["encryption"]

# Middleware features
middleware = ["dep:axum", "dep:tower", "dep:tower-http", "dep:hyper"]
rate-limiting = ["dep:governor", "dep:tower_governor"]
csrf-protection = ["dep:csrf"]
security-headers = ["dep:headers"]

# Audit and monitoring
audit-logging = ["dep:tracing", "dep:tracing-subscriber"]
threat-detection = ["dep:maxminddb", "dep:ipnet"]
metrics = ["dep:prometheus", "dep:metrics"]

# Development and testing
dev-tools = ["dep:fake", "dep:quickcheck"]
integration-tests = ["dep:testcontainers", "dep:wiremock"]

[lib]
name = "ai_core_security"
path = "src/lib.rs"



[[example]]
name = "basic_usage"
path = "examples/basic_usage.rs"
required-features = ["default"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[package.metadata.security]
# Security audit configuration
policy = "deny"
informational = "warn"
unsound = "deny"
vulnerability = "deny"
notice = "warn"
