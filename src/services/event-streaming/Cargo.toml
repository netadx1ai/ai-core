[package]
name = "event-streaming-service"
version = "1.0.0"
edition = "2021"
description = "Event streaming service for AI-CORE platform with Kafka and Redis Streams integration"
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
keywords.workspace = true
categories.workspace = true

[lib]
name = "event_streaming_service"
path = "src/lib.rs"

[[bin]]
name = "event-streaming-server"
path = "src/main.rs"

[dependencies]
# Workspace dependencies
tokio = { workspace = true }
tokio-util = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }

# Web framework
axum = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true, features = ["cors", "trace", "compression-br", "compression-gzip", "request-id", "timeout"] }
hyper = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
bincode = { workspace = true }

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Time and identifiers
chrono = { workspace = true }
uuid = { workspace = true }

# Validation
validator = { workspace = true }

# Redis for streams
redis = { workspace = true }

# Kafka client
rdkafka = { version = "0.36", features = ["cmake-build", "tokio"], optional = true }

# Database connections
sqlx = { workspace = true }
mongodb = { workspace = true }
clickhouse = { workspace = true }

# Configuration
config = { workspace = true }
clap = { workspace = true }
dotenvy = { workspace = true }

# Logging & Tracing
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-opentelemetry = { workspace = true }
opentelemetry = { workspace = true }

# Metrics
prometheus = { workspace = true }
metrics = { workspace = true }

# HTTP Client for webhooks
reqwest = { workspace = true }

# Rate limiting for stream processing
governor = { workspace = true }

# System utilities
num_cpus = { workspace = true }
bytes = { workspace = true }

# Compression for event storage
lz4_flex = { workspace = true, optional = true }
zstd = { workspace = true, optional = true }

# Shared dependencies
AI-PLATFORM-shared = { workspace = true }

# Additional event streaming specific dependencies
lapin = { version = "2.3", optional = true }  # RabbitMQ client for additional messaging patterns
crossbeam = "0.8"  # Lock-free data structures for high-performance processing
dashmap = "5.5"  # Concurrent hash map for event routing
ahash = "0.8"  # Fast non-cryptographic hasher
parking_lot = "0.12"  # High-performance synchronization primitives
once_cell = "1.19"  # Thread-safe lazy static initialization

[dev-dependencies]
tokio-test = { workspace = true }
mockall = { workspace = true }
criterion = { workspace = true }
wiremock = { workspace = true }
testcontainers = "0.15"
pretty_assertions = { workspace = true }
tempfile = { workspace = true }

# Additional test utilities
testcontainers-modules = { version = "0.3", features = ["kafka", "redis"] }
serial_test = "3.0"  # For tests that need to run serially

[features]
default = ["kafka", "redis-streams"]
kafka = ["dep:rdkafka"]
redis-streams = []
rabbitmq = ["dep:lapin"]
metrics = []
compression = ["dep:lz4_flex", "dep:zstd"]



[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
