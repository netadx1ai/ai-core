[package]
name = "notification-service"
version = "1.0.0"
edition = "2021"
description = "Multi-channel notification service for AI-CORE platform with email, SMS, push, and webhook support"
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
keywords.workspace = true
categories.workspace = true

[lib]
name = "notification_service"
path = "src/lib.rs"

[[bin]]
name = "notification-server"
path = "src/main.rs"

[dependencies]
# Workspace dependencies
tokio = { workspace = true }
tokio-util = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }

# Web framework
axum = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true, features = ["cors", "trace", "compression-br", "compression-gzip", "request-id", "timeout"] }
hyper = { workspace = true }

# WebSocket support
axum-tungstenite = { version = "0.2", optional = true }
tokio-tungstenite = { version = "0.21", optional = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Time and identifiers
chrono = { workspace = true }
uuid = { workspace = true }

# Validation
validator = { workspace = true }

# Database connections
sqlx = { workspace = true }
mongodb = { workspace = true }
redis = { workspace = true }

# Configuration
config = { workspace = true }
clap = { workspace = true }
dotenvy = { workspace = true }

# Logging & Tracing
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-opentelemetry = { workspace = true }
opentelemetry = { workspace = true }

# Metrics
prometheus = { workspace = true }
metrics = { workspace = true }

# HTTP Client for webhooks and external APIs
reqwest = { workspace = true }

# Email service integration
lettre = { version = "0.11", features = ["tokio1-native-tls", "smtp-transport", "builder", "pool"], optional = true }

# SMS service integration (Twilio, AWS SNS)
twilio = { version = "1.1", optional = true }
aws-sdk-sns = { version = "1.9", optional = true }
aws-config = { version = "1.1", optional = true }

# Push notification services
web-push = { version = "0.9", optional = true }
fcm = { version = "0.9", optional = true }

# Template engine
handlebars = "4.4"
tera = { version = "1.19", optional = true }

# Rate limiting
governor = { workspace = true }

# System utilities
num_cpus = { workspace = true }
bytes = { workspace = true }

# JSON Web Tokens for push notifications
jsonwebtoken = "9.2"

# Base64 encoding for various operations
base64 = "0.21"

# HTML and text processing
html5ever = { version = "0.26", optional = true }
pulldown-cmark = { version = "0.9", optional = true }

# Background job processing
tokio-cron-scheduler = "0.9"

# Additional missing dependencies
criterion = { workspace = true, optional = true }

# Shared dependencies
AI-PLATFORM-shared = { workspace = true }

# Additional notification-specific dependencies
dashmap = "5.5"  # Concurrent hash map for active connections
parking_lot = "0.12"  # High-performance synchronization primitives
once_cell = "1.19"  # Thread-safe lazy static initialization

[dev-dependencies]
tokio-test = { workspace = true }
mockall = { workspace = true }
criterion = { workspace = true }
wiremock = { workspace = true }
testcontainers = "0.15"
pretty_assertions = { workspace = true }
tempfile = { workspace = true }
axum-test = "18.0"

# Additional test utilities
serial_test = "3.0"  # For tests that need to run serially
fake = { version = "2.9", features = ["derive", "chrono", "uuid"] }

[features]
default = ["email", "webhooks", "websockets", "templates"]
testing = ["dep:criterion"]
email = ["dep:lettre"]
sms-twilio = ["dep:twilio"]
sms-aws = ["dep:aws-sdk-sns", "dep:aws-config"]
push-web = ["dep:web-push"]
push-fcm = ["dep:fcm"]
templates-tera = ["dep:tera"]
html-processing = ["dep:html5ever", "dep:pulldown-cmark"]
webhooks = []
websockets = ["dep:axum-tungstenite", "dep:tokio-tungstenite"]
templates = []
all = [
    "email",
    "sms-twilio",
    "sms-aws",
    "push-web",
    "push-fcm",
    "templates-tera",
    "html-processing",
    "webhooks",
    "websockets",
    "templates"
]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
