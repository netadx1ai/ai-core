[package]
name = "test-data-api"
version = "0.1.0"
edition = "2021"
authors = ["AI-CORE Team <ai-core@example.com>"]
description = "AI-CORE Test Data Management API Service - FAANG-Enhanced Testing Infrastructure"
license = "MIT OR Apache-2.0"
repository = "https://github.com/ai-core/ai-core"
keywords = ["testing", "automation", "api", "data-management", "ai-core"]
categories = ["development-tools::testing", "web-programming::http-server"]

[[bin]]
name = "test-data-api-server"
path = "src/main.rs"

[dependencies]
# Core async runtime and HTTP framework
tokio = { version = "1.35", features = ["full"] }
axum = { version = "0.7", features = ["headers", "multipart", "ws", "macros"] }
tower = { version = "0.4", features = ["full"] }
tower-http = { version = "0.5", features = ["cors", "trace", "request-id", "timeout"] }
hyper = { version = "1.0", features = ["full"] }

# Serialization and validation
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
validator = { version = "0.16", features = ["derive"] }

# Database drivers and connection pooling
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "chrono", "uuid", "json", "migrate"] }
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"] }
mongodb = "2.8"
clickhouse = { version = "0.11", features = ["rustls-tls"] }

# Authentication and security
jsonwebtoken = "9.2"
argon2 = "0.5"
uuid = { version = "1.6", features = ["v4", "serde"] }

# Configuration and environment
config = "0.14"
dotenvy = "0.15"

# Observability and monitoring
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-opentelemetry = "0.22"
opentelemetry = { version = "0.21", features = ["rt-tokio"] }
opentelemetry-jaeger = { version = "0.20", features = ["rt-tokio"] }
metrics = "0.22"
metrics-exporter-prometheus = "0.13"

# Error handling and utilities
anyhow = "1.0"
thiserror = "1.0"
chrono = { version = "0.4", features = ["serde"] }
once_cell = "1.19"
reqwest = { version = "0.11", features = ["json", "rustls-tls"] }

# Data processing and transformation
faker_rand = "0.1"
rand = "0.8"
csv = "1.3"
futures-util = "0.3"

# Template and code generation
handlebars = "4.5"
regex = "1.10"

# Health checks and service discovery
etcd-rs = { version = "1.0", optional = true }

# Testing dependencies
[dev-dependencies]
tokio-test = "0.4"
mockall = "0.12"
wiremock = "0.5"
testcontainers = "0.15"
pretty_assertions = "1.4"
criterion = { version = "0.5", features = ["html_reports"] }

# Feature flags for different environments
[features]
default = ["postgres", "redis", "mongodb", "clickhouse"]
postgres = ["sqlx/postgres"]
mysql = ["sqlx/mysql"]
sqlite = ["sqlx/sqlite"]
etcd-discovery = ["etcd-rs"]
performance-testing = []
chaos-engineering = []

# Optimization profiles
[profile.dev]
debug = true
opt-level = 0
overflow-checks = true

[profile.release]
debug = false
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
overflow-checks = false

[profile.test]
debug = true
opt-level = 1

# Build configuration
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

# Security audit configuration
[package.metadata.audit]
ignore = []
