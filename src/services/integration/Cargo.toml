[package]
name = "integration-service"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
keywords.workspace = true
categories.workspace = true
description = "AI-CORE Integration Service - Third-party API integrations for Zapier, Slack, and GitHub"

[dependencies]
# Workspace dependencies
AI-PLATFORM-shared = { workspace = true }
tokio.workspace = true
axum.workspace = true
tower.workspace = true
tower-http.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_yaml.workspace = true
thiserror.workspace = true
anyhow.workspace = true
chrono.workspace = true
uuid.workspace = true
validator.workspace = true
regex.workspace = true
jsonwebtoken.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
reqwest.workspace = true
bytes.workspace = true
futures.workspace = true
async-trait.workspace = true
config.workspace = true
clap.workspace = true
dotenvy.workspace = true
prometheus.workspace = true
metrics.workspace = true
redis.workspace = true
deadpool-redis.workspace = true
dashmap.workspace = true
parking_lot.workspace = true
once_cell.workspace = true

# Database dependencies
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono", "json", "migrate", "macros"] }

# Integration-specific dependencies
# Crypto for webhook signature verification
hmac = "0.12"
sha1 = "0.10"
sha2 = "0.10"
hex = "0.4"
base64 = "0.21"
subtle = "2.6"

# Validation for webhook system

# HTTP utilities
url = "2.4"
form_urlencoded = "1.2"

# GitHub API
octocrab = "0.32"

# Slack API (simplified for now)
# slack-morphism = { version = "1.14", features = ["axum"] }

# WebSocket for real-time integrations
tokio-tungstenite = { version = "0.21", features = ["native-tls"], optional = true }

# Additional serialization formats
toml = "0.8"

# Rate limiting and circuit breaker
# tower-governor = "0.1"
# circuit-breaker = "0.1"

# Template engine for dynamic content
handlebars = { version = "4.5", optional = true }
minijinja = { version = "1.0", optional = true }

# Cron parsing for scheduled integrations
cron = { version = "0.12", optional = true }

# OAuth2 for authentication flows
oauth2 = { version = "4.4", optional = true }

# Event sourcing and messaging
crossbeam-channel = "0.5"

# Random number generation for webhook routing
rand = "0.8"


[dev-dependencies]
tokio-test.workspace = true
wiremock.workspace = true
tempfile.workspace = true
pretty_assertions.workspace = true
rstest.workspace = true
serial_test.workspace = true
test-log.workspace = true
tracing-test.workspace = true
mockall.workspace = true
fake.workspace = true
portpicker.workspace = true
axum-test = "15.0"

[lib]
name = "integration_service"
path = "src/lib.rs"

[[bin]]
name = "integration-server"
path = "src/main.rs"

[features]
default = ["zapier", "slack", "github"]
zapier = []
slack = []
github = []
oauth = ["dep:oauth2"]
templates = ["dep:handlebars", "dep:minijinja"]
scheduling = ["dep:cron"]
websocket = ["dep:tokio-tungstenite"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
